user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
    multi_accept on;
}

http {
    # Configure SSL
    server {
        listen 443 ssl;
        server_name your_domain.com;

        ssl_certificate /etc/nginx/ssl/your_domain.crt;
        ssl_certificate_key /etc/nginx/ssl/your_domain.key;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';

        # Additional SSL configurations...

        location / {
            # Additional configurations for your HTTP server...
        }
    }
}

rtmp {
    server {
        listen 1935 ssl;  # Listen on the SSL-enabled port

        ssl_certificate /etc/nginx/ssl/your_domain.crt;
        ssl_certificate_key /etc/nginx/ssl/your_domain.key;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';

        chunk_size 4096;

        application live {
            live on;
            allow publish all;
            deny play all;

            # Control access based on the stream key
            on_publish_done exec_push /usr/local/nginx/validate_stream.sh $name $addr;
            on_play_done exec_push /usr/local/nginx/validate_stream.sh $name $addr;

            # Other RTMP configurations...
        }
    }
}

